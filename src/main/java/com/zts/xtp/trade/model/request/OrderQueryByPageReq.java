// Generated by delombok at Sun Sep 22 21:37:45 CST 2019
package com.zts.xtp.trade.model.request;


public class OrderQueryByPageReq {
    /**
     * 需要查询的订单条数
     */
    private long reqCount;
    /**
     * 上一次收到的查询订单结果中带回来的索引，如果是从头查询，请置0
     */
    private long reference;
    /**
     * 保留字段
     */
    private long reserved;


    @SuppressWarnings("all")
    public static class OrderQueryByPageReqBuilder {
        @SuppressWarnings("all")
        private long reqCount;
        @SuppressWarnings("all")
        private long reference;
        @SuppressWarnings("all")
        private long reserved;

        @SuppressWarnings("all")
        OrderQueryByPageReqBuilder() {
        }

        @SuppressWarnings("all")
        public OrderQueryByPageReqBuilder reqCount(final long reqCount) {
            this.reqCount = reqCount;
            return this;
        }

        @SuppressWarnings("all")
        public OrderQueryByPageReqBuilder reference(final long reference) {
            this.reference = reference;
            return this;
        }

        @SuppressWarnings("all")
        public OrderQueryByPageReqBuilder reserved(final long reserved) {
            this.reserved = reserved;
            return this;
        }

        @SuppressWarnings("all")
        public OrderQueryByPageReq build() {
            return new OrderQueryByPageReq(reqCount, reference, reserved);
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "OrderQueryByPageReq.OrderQueryByPageReqBuilder(reqCount=" + this.reqCount + ", reference=" + this.reference + ", reserved=" + this.reserved + ")";
        }
    }

    @SuppressWarnings("all")
    public static OrderQueryByPageReqBuilder builder() {
        return new OrderQueryByPageReqBuilder();
    }

    /**
     * 需要查询的订单条数
     */
    @SuppressWarnings("all")
    public void setReqCount(final long reqCount) {
        this.reqCount = reqCount;
    }

    /**
     * 上一次收到的查询订单结果中带回来的索引，如果是从头查询，请置0
     */
    @SuppressWarnings("all")
    public void setReference(final long reference) {
        this.reference = reference;
    }

    /**
     * 保留字段
     */
    @SuppressWarnings("all")
    public void setReserved(final long reserved) {
        this.reserved = reserved;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof OrderQueryByPageReq)) return false;
        final OrderQueryByPageReq other = (OrderQueryByPageReq) o;
        if (!other.canEqual((Object) this)) return false;
        if (this.getReqCount() != other.getReqCount()) return false;
        if (this.getReference() != other.getReference()) return false;
        if (this.getReserved() != other.getReserved()) return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof OrderQueryByPageReq;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final long $reqCount = this.getReqCount();
        result = result * PRIME + (int) ($reqCount >>> 32 ^ $reqCount);
        final long $reference = this.getReference();
        result = result * PRIME + (int) ($reference >>> 32 ^ $reference);
        final long $reserved = this.getReserved();
        result = result * PRIME + (int) ($reserved >>> 32 ^ $reserved);
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "OrderQueryByPageReq(reqCount=" + this.getReqCount() + ", reference=" + this.getReference() + ", reserved=" + this.getReserved() + ")";
    }

    @SuppressWarnings("all")
    public OrderQueryByPageReq() {
    }

    @SuppressWarnings("all")
    public OrderQueryByPageReq(final long reqCount, final long reference, final long reserved) {
        this.reqCount = reqCount;
        this.reference = reference;
        this.reserved = reserved;
    }

    /**
     * 需要查询的订单条数
     */
    @SuppressWarnings("all")
    public long getReqCount() {
        return this.reqCount;
    }

    /**
     * 上一次收到的查询订单结果中带回来的索引，如果是从头查询，请置0
     */
    @SuppressWarnings("all")
    public long getReference() {
        return this.reference;
    }

    /**
     * 保留字段
     */
    @SuppressWarnings("all")
    public long getReserved() {
        return this.reserved;
    }
}
