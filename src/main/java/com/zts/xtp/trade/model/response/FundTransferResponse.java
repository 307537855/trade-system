// Generated by delombok at Sun Sep 22 21:37:45 CST 2019
package com.zts.xtp.trade.model.response;

import com.zts.xtp.common.enums.FundOperStatus;
import com.zts.xtp.common.enums.FundTransferType;

public class FundTransferResponse {
    /**
     * 资金内转编号
     */
    private String serialId;
    /**
     * 内转类型
     */
    FundTransferType fundTransferType;
    /**
     * 金额
     */
    private double amount;
    /**
     * 操作结果
     */
    FundOperStatus fundOperStatus;
    /**
     * 操作时间
     */
    private String transferTime;
    /**
     * 此消息响应函数对应的请求ID
     */
    private int requestId;
    /**
     * 此消息响应函数是否为request_id这条请求所对应的最后一个响应，当为最后一个的时候为true，如果为false，表示还有其他后续消息响应
     */
    private boolean lastResp;

    public void setFundTransferType(int type) {
        fundTransferType = FundTransferType.values()[type];
    }

    public void setFundOperStatus(int type) {
        fundOperStatus = FundOperStatus.values()[type];
    }


    @SuppressWarnings("all")
    public static class FundTransferResponseBuilder {
        @SuppressWarnings("all")
        private String serialId;
        @SuppressWarnings("all")
        private FundTransferType fundTransferType;
        @SuppressWarnings("all")
        private double amount;
        @SuppressWarnings("all")
        private FundOperStatus fundOperStatus;
        @SuppressWarnings("all")
        private String transferTime;
        @SuppressWarnings("all")
        private int requestId;
        @SuppressWarnings("all")
        private boolean lastResp;

        @SuppressWarnings("all")
        FundTransferResponseBuilder() {
        }

        @SuppressWarnings("all")
        public FundTransferResponseBuilder serialId(final String serialId) {
            this.serialId = serialId;
            return this;
        }

        @SuppressWarnings("all")
        public FundTransferResponseBuilder fundTransferType(final FundTransferType fundTransferType) {
            this.fundTransferType = fundTransferType;
            return this;
        }

        @SuppressWarnings("all")
        public FundTransferResponseBuilder amount(final double amount) {
            this.amount = amount;
            return this;
        }

        @SuppressWarnings("all")
        public FundTransferResponseBuilder fundOperStatus(final FundOperStatus fundOperStatus) {
            this.fundOperStatus = fundOperStatus;
            return this;
        }

        @SuppressWarnings("all")
        public FundTransferResponseBuilder transferTime(final String transferTime) {
            this.transferTime = transferTime;
            return this;
        }

        @SuppressWarnings("all")
        public FundTransferResponseBuilder requestId(final int requestId) {
            this.requestId = requestId;
            return this;
        }

        @SuppressWarnings("all")
        public FundTransferResponseBuilder lastResp(final boolean lastResp) {
            this.lastResp = lastResp;
            return this;
        }

        @SuppressWarnings("all")
        public FundTransferResponse build() {
            return new FundTransferResponse(serialId, fundTransferType, amount, fundOperStatus, transferTime, requestId, lastResp);
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "FundTransferResponse.FundTransferResponseBuilder(serialId=" + this.serialId + ", fundTransferType=" + this.fundTransferType + ", amount=" + this.amount + ", fundOperStatus=" + this.fundOperStatus + ", transferTime=" + this.transferTime + ", requestId=" + this.requestId + ", lastResp=" + this.lastResp + ")";
        }
    }

    @SuppressWarnings("all")
    public static FundTransferResponseBuilder builder() {
        return new FundTransferResponseBuilder();
    }

    /**
     * 资金内转编号
     */
    @SuppressWarnings("all")
    public String getSerialId() {
        return this.serialId;
    }

    /**
     * 内转类型
     */
    @SuppressWarnings("all")
    public FundTransferType getFundTransferType() {
        return this.fundTransferType;
    }

    /**
     * 金额
     */
    @SuppressWarnings("all")
    public double getAmount() {
        return this.amount;
    }

    /**
     * 操作结果
     */
    @SuppressWarnings("all")
    public FundOperStatus getFundOperStatus() {
        return this.fundOperStatus;
    }

    /**
     * 操作时间
     */
    @SuppressWarnings("all")
    public String getTransferTime() {
        return this.transferTime;
    }

    /**
     * 此消息响应函数对应的请求ID
     */
    @SuppressWarnings("all")
    public int getRequestId() {
        return this.requestId;
    }

    /**
     * 此消息响应函数是否为request_id这条请求所对应的最后一个响应，当为最后一个的时候为true，如果为false，表示还有其他后续消息响应
     */
    @SuppressWarnings("all")
    public boolean isLastResp() {
        return this.lastResp;
    }

    /**
     * 资金内转编号
     */
    @SuppressWarnings("all")
    public void setSerialId(final String serialId) {
        this.serialId = serialId;
    }

    /**
     * 金额
     */
    @SuppressWarnings("all")
    public void setAmount(final double amount) {
        this.amount = amount;
    }

    /**
     * 操作时间
     */
    @SuppressWarnings("all")
    public void setTransferTime(final String transferTime) {
        this.transferTime = transferTime;
    }

    /**
     * 此消息响应函数对应的请求ID
     */
    @SuppressWarnings("all")
    public void setRequestId(final int requestId) {
        this.requestId = requestId;
    }

    /**
     * 此消息响应函数是否为request_id这条请求所对应的最后一个响应，当为最后一个的时候为true，如果为false，表示还有其他后续消息响应
     */
    @SuppressWarnings("all")
    public void setLastResp(final boolean lastResp) {
        this.lastResp = lastResp;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "FundTransferResponse(serialId=" + this.getSerialId() + ", fundTransferType=" + this.getFundTransferType() + ", amount=" + this.getAmount() + ", fundOperStatus=" + this.getFundOperStatus() + ", transferTime=" + this.getTransferTime() + ", requestId=" + this.getRequestId() + ", lastResp=" + this.isLastResp() + ")";
    }

    @SuppressWarnings("all")
    public FundTransferResponse() {
    }

    @SuppressWarnings("all")
    public FundTransferResponse(final String serialId, final FundTransferType fundTransferType, final double amount, final FundOperStatus fundOperStatus, final String transferTime, final int requestId, final boolean lastResp) {
        this.serialId = serialId;
        this.fundTransferType = fundTransferType;
        this.amount = amount;
        this.fundOperStatus = fundOperStatus;
        this.transferTime = transferTime;
        this.requestId = requestId;
        this.lastResp = lastResp;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof FundTransferResponse)) return false;
        final FundTransferResponse other = (FundTransferResponse) o;
        if (!other.canEqual((Object) this)) return false;
        final Object this$serialId = this.getSerialId();
        final Object other$serialId = other.getSerialId();
        if (this$serialId == null ? other$serialId != null : !this$serialId.equals(other$serialId)) return false;
        final Object this$fundTransferType = this.getFundTransferType();
        final Object other$fundTransferType = other.getFundTransferType();
        if (this$fundTransferType == null ? other$fundTransferType != null : !this$fundTransferType.equals(other$fundTransferType)) return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof FundTransferResponse;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final Object $serialId = this.getSerialId();
        result = result * PRIME + ($serialId == null ? 43 : $serialId.hashCode());
        final Object $fundTransferType = this.getFundTransferType();
        result = result * PRIME + ($fundTransferType == null ? 43 : $fundTransferType.hashCode());
        return result;
    }
}
