// Generated by delombok at Sun Sep 22 21:37:45 CST 2019
package com.zts.xtp.quote.model.response;

public class DepthMarketDataExResponse {
    /**
     * 买一队列数据
     */
    private long[] bid1Qty;
    /**
     * 买一队列的有效委托笔数
     */
    private int bid1Count;
    /**
     * 买一队列总委托笔数
     */
    private int maxBid1Count;
    /**
     * 卖一队列数据
     */
    private long[] ask1Qty;
    /**
     * 卖一队列的有效委托笔数
     */
    private int ask1Count;
    /**
     * 卖一队列总委托笔数
     */
    private int maxAsk1Count;


    @SuppressWarnings("all")
    public static class DepthMarketDataExResponseBuilder {
        @SuppressWarnings("all")
        private long[] bid1Qty;
        @SuppressWarnings("all")
        private int bid1Count;
        @SuppressWarnings("all")
        private int maxBid1Count;
        @SuppressWarnings("all")
        private long[] ask1Qty;
        @SuppressWarnings("all")
        private int ask1Count;
        @SuppressWarnings("all")
        private int maxAsk1Count;

        @SuppressWarnings("all")
        DepthMarketDataExResponseBuilder() {
        }

        @SuppressWarnings("all")
        public DepthMarketDataExResponseBuilder bid1Qty(final long[] bid1Qty) {
            this.bid1Qty = bid1Qty;
            return this;
        }

        @SuppressWarnings("all")
        public DepthMarketDataExResponseBuilder bid1Count(final int bid1Count) {
            this.bid1Count = bid1Count;
            return this;
        }

        @SuppressWarnings("all")
        public DepthMarketDataExResponseBuilder maxBid1Count(final int maxBid1Count) {
            this.maxBid1Count = maxBid1Count;
            return this;
        }

        @SuppressWarnings("all")
        public DepthMarketDataExResponseBuilder ask1Qty(final long[] ask1Qty) {
            this.ask1Qty = ask1Qty;
            return this;
        }

        @SuppressWarnings("all")
        public DepthMarketDataExResponseBuilder ask1Count(final int ask1Count) {
            this.ask1Count = ask1Count;
            return this;
        }

        @SuppressWarnings("all")
        public DepthMarketDataExResponseBuilder maxAsk1Count(final int maxAsk1Count) {
            this.maxAsk1Count = maxAsk1Count;
            return this;
        }

        @SuppressWarnings("all")
        public DepthMarketDataExResponse build() {
            return new DepthMarketDataExResponse(bid1Qty, bid1Count, maxBid1Count, ask1Qty, ask1Count, maxAsk1Count);
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "DepthMarketDataExResponse.DepthMarketDataExResponseBuilder(bid1Qty=" + java.util.Arrays.toString(this.bid1Qty) + ", bid1Count=" + this.bid1Count + ", maxBid1Count=" + this.maxBid1Count + ", ask1Qty=" + java.util.Arrays.toString(this.ask1Qty) + ", ask1Count=" + this.ask1Count + ", maxAsk1Count=" + this.maxAsk1Count + ")";
        }
    }

    @SuppressWarnings("all")
    public static DepthMarketDataExResponseBuilder builder() {
        return new DepthMarketDataExResponseBuilder();
    }

    /**
     * 买一队列数据
     */
    @SuppressWarnings("all")
    public long[] getBid1Qty() {
        return this.bid1Qty;
    }

    /**
     * 买一队列的有效委托笔数
     */
    @SuppressWarnings("all")
    public int getBid1Count() {
        return this.bid1Count;
    }

    /**
     * 买一队列总委托笔数
     */
    @SuppressWarnings("all")
    public int getMaxBid1Count() {
        return this.maxBid1Count;
    }

    /**
     * 卖一队列数据
     */
    @SuppressWarnings("all")
    public long[] getAsk1Qty() {
        return this.ask1Qty;
    }

    /**
     * 卖一队列的有效委托笔数
     */
    @SuppressWarnings("all")
    public int getAsk1Count() {
        return this.ask1Count;
    }

    /**
     * 卖一队列总委托笔数
     */
    @SuppressWarnings("all")
    public int getMaxAsk1Count() {
        return this.maxAsk1Count;
    }

    /**
     * 买一队列数据
     */
    @SuppressWarnings("all")
    public void setBid1Qty(final long[] bid1Qty) {
        this.bid1Qty = bid1Qty;
    }

    /**
     * 买一队列的有效委托笔数
     */
    @SuppressWarnings("all")
    public void setBid1Count(final int bid1Count) {
        this.bid1Count = bid1Count;
    }

    /**
     * 买一队列总委托笔数
     */
    @SuppressWarnings("all")
    public void setMaxBid1Count(final int maxBid1Count) {
        this.maxBid1Count = maxBid1Count;
    }

    /**
     * 卖一队列数据
     */
    @SuppressWarnings("all")
    public void setAsk1Qty(final long[] ask1Qty) {
        this.ask1Qty = ask1Qty;
    }

    /**
     * 卖一队列的有效委托笔数
     */
    @SuppressWarnings("all")
    public void setAsk1Count(final int ask1Count) {
        this.ask1Count = ask1Count;
    }

    /**
     * 卖一队列总委托笔数
     */
    @SuppressWarnings("all")
    public void setMaxAsk1Count(final int maxAsk1Count) {
        this.maxAsk1Count = maxAsk1Count;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof DepthMarketDataExResponse)) return false;
        final DepthMarketDataExResponse other = (DepthMarketDataExResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (!java.util.Arrays.equals(this.getBid1Qty(), other.getBid1Qty())) return false;
        if (this.getBid1Count() != other.getBid1Count()) return false;
        if (this.getMaxBid1Count() != other.getMaxBid1Count()) return false;
        if (!java.util.Arrays.equals(this.getAsk1Qty(), other.getAsk1Qty())) return false;
        if (this.getAsk1Count() != other.getAsk1Count()) return false;
        if (this.getMaxAsk1Count() != other.getMaxAsk1Count()) return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof DepthMarketDataExResponse;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + java.util.Arrays.hashCode(this.getBid1Qty());
        result = result * PRIME + this.getBid1Count();
        result = result * PRIME + this.getMaxBid1Count();
        result = result * PRIME + java.util.Arrays.hashCode(this.getAsk1Qty());
        result = result * PRIME + this.getAsk1Count();
        result = result * PRIME + this.getMaxAsk1Count();
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "DepthMarketDataExResponse(bid1Qty=" + java.util.Arrays.toString(this.getBid1Qty()) + ", bid1Count=" + this.getBid1Count() + ", maxBid1Count=" + this.getMaxBid1Count() + ", ask1Qty=" + java.util.Arrays.toString(this.getAsk1Qty()) + ", ask1Count=" + this.getAsk1Count() + ", maxAsk1Count=" + this.getMaxAsk1Count() + ")";
    }

    @SuppressWarnings("all")
    public DepthMarketDataExResponse() {
    }

    @SuppressWarnings("all")
    public DepthMarketDataExResponse(final long[] bid1Qty, final int bid1Count, final int maxBid1Count, final long[] ask1Qty, final int ask1Count, final int maxAsk1Count) {
        this.bid1Qty = bid1Qty;
        this.bid1Count = bid1Count;
        this.maxBid1Count = maxBid1Count;
        this.ask1Qty = ask1Qty;
        this.ask1Count = ask1Count;
        this.maxAsk1Count = maxAsk1Count;
    }
}
