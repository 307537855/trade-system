// Generated by delombok at Sun Sep 22 21:37:45 CST 2019
package com.zts.xtp.quote.model.response;

public class MarketDataStockExDataResponse {
    /**
     * 委托买入总量(SH,SZ)
     */
    private long totalBidQty;
    /**
     * 委托卖出总量(SH,SZ)
     */
    private long totalAskQty;
    /**
     * 加权平均委买价格(SH,SZ)
     */
    private double maBidPrice;
    /**
     * 加权平均委卖价格(SH,SZ)
     */
    private double maAskPrice;
    /**
     * 债券加权平均委买价格(SH)
     */
    private double maBondBidPrice;
    /**
     * 债券加权平均委卖价格(SH)
     */
    private double maBondAskPrice;
    /**
     * 债券到期收益率(SH)
     */
    private double yieldToMaturity;
    /**
     * 基金实时参考净值(SH,SZ)
     */
    private double iopv;
    /**
     * ETF申购笔数(SH)
     */
    private int etfBuyCount;
    /**
     * ETF赎回笔数(SH)
     */
    private int etfSellCount;
    /**
     * ETF申购数量(SH)
     */
    private double etfBuyQty;
    /**
     * ETF申购金额(SH)
     */
    private double etfBuyMoney;
    /**
     * ETF赎回数量(SH)
     */
    private double etfSellQty;
    /**
     * ETF赎回金额(SH)
     */
    private double etfSellMoney;
    /**
     * 权证执行的总数量(SH)
     */
    private double totalWarrantExecQty;
    /**
     * 权证跌停价格（元）(SH)
     */
    private double warrantLowerPrice;
    /**
     * 权证涨停价格（元）(SH)
     */
    private double warrantUpperPrice;
    /**
     * 买入撤单笔数(SH)
     */
    private int cancelBuyCount;
    /**
     * 卖出撤单笔数(SH)
     */
    private int cancelSellCount;
    /**
     * 买入撤单数量(SH)
     */
    private double cancelBuyQty;
    /**
     * 卖出撤单数量(SH)
     */
    private double cancelSellQty;
    /**
     * 买入撤单金额(SH)
     */
    private double cancelBuyMoney;
    /**
     * 卖出撤单金额(SH)
     */
    private double cancelSellMoney;
    /**
     * 买入总笔数(SH)
     */
    private long totalBuyCount;
    /**
     * 卖出总笔数(SH)
     */
    private long totalSellCount;
    /**
     * 买入委托成交最大等待时间(SH)
     */
    private int durationAfterBuy;
    /**
     * 卖出委托成交最大等待时间(SH)
     */
    private int durationAfterSell;
    /**
     * 买方委托价位数(SH)
     */
    private int numBidOrders;
    /**
     * 卖方委托价位数(SH)
     */
    private int numAskOrders;
    /**
     * 基金T-1日净值(SZ)
     */
    private double preIopv;


    @SuppressWarnings("all")
    public static class MarketDataStockExDataResponseBuilder {
        @SuppressWarnings("all")
        private long totalBidQty;
        @SuppressWarnings("all")
        private long totalAskQty;
        @SuppressWarnings("all")
        private double maBidPrice;
        @SuppressWarnings("all")
        private double maAskPrice;
        @SuppressWarnings("all")
        private double maBondBidPrice;
        @SuppressWarnings("all")
        private double maBondAskPrice;
        @SuppressWarnings("all")
        private double yieldToMaturity;
        @SuppressWarnings("all")
        private double iopv;
        @SuppressWarnings("all")
        private int etfBuyCount;
        @SuppressWarnings("all")
        private int etfSellCount;
        @SuppressWarnings("all")
        private double etfBuyQty;
        @SuppressWarnings("all")
        private double etfBuyMoney;
        @SuppressWarnings("all")
        private double etfSellQty;
        @SuppressWarnings("all")
        private double etfSellMoney;
        @SuppressWarnings("all")
        private double totalWarrantExecQty;
        @SuppressWarnings("all")
        private double warrantLowerPrice;
        @SuppressWarnings("all")
        private double warrantUpperPrice;
        @SuppressWarnings("all")
        private int cancelBuyCount;
        @SuppressWarnings("all")
        private int cancelSellCount;
        @SuppressWarnings("all")
        private double cancelBuyQty;
        @SuppressWarnings("all")
        private double cancelSellQty;
        @SuppressWarnings("all")
        private double cancelBuyMoney;
        @SuppressWarnings("all")
        private double cancelSellMoney;
        @SuppressWarnings("all")
        private long totalBuyCount;
        @SuppressWarnings("all")
        private long totalSellCount;
        @SuppressWarnings("all")
        private int durationAfterBuy;
        @SuppressWarnings("all")
        private int durationAfterSell;
        @SuppressWarnings("all")
        private int numBidOrders;
        @SuppressWarnings("all")
        private int numAskOrders;
        @SuppressWarnings("all")
        private double preIopv;

        @SuppressWarnings("all")
        MarketDataStockExDataResponseBuilder() {
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder totalBidQty(final long totalBidQty) {
            this.totalBidQty = totalBidQty;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder totalAskQty(final long totalAskQty) {
            this.totalAskQty = totalAskQty;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder maBidPrice(final double maBidPrice) {
            this.maBidPrice = maBidPrice;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder maAskPrice(final double maAskPrice) {
            this.maAskPrice = maAskPrice;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder maBondBidPrice(final double maBondBidPrice) {
            this.maBondBidPrice = maBondBidPrice;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder maBondAskPrice(final double maBondAskPrice) {
            this.maBondAskPrice = maBondAskPrice;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder yieldToMaturity(final double yieldToMaturity) {
            this.yieldToMaturity = yieldToMaturity;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder iopv(final double iopv) {
            this.iopv = iopv;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder etfBuyCount(final int etfBuyCount) {
            this.etfBuyCount = etfBuyCount;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder etfSellCount(final int etfSellCount) {
            this.etfSellCount = etfSellCount;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder etfBuyQty(final double etfBuyQty) {
            this.etfBuyQty = etfBuyQty;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder etfBuyMoney(final double etfBuyMoney) {
            this.etfBuyMoney = etfBuyMoney;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder etfSellQty(final double etfSellQty) {
            this.etfSellQty = etfSellQty;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder etfSellMoney(final double etfSellMoney) {
            this.etfSellMoney = etfSellMoney;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder totalWarrantExecQty(final double totalWarrantExecQty) {
            this.totalWarrantExecQty = totalWarrantExecQty;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder warrantLowerPrice(final double warrantLowerPrice) {
            this.warrantLowerPrice = warrantLowerPrice;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder warrantUpperPrice(final double warrantUpperPrice) {
            this.warrantUpperPrice = warrantUpperPrice;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder cancelBuyCount(final int cancelBuyCount) {
            this.cancelBuyCount = cancelBuyCount;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder cancelSellCount(final int cancelSellCount) {
            this.cancelSellCount = cancelSellCount;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder cancelBuyQty(final double cancelBuyQty) {
            this.cancelBuyQty = cancelBuyQty;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder cancelSellQty(final double cancelSellQty) {
            this.cancelSellQty = cancelSellQty;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder cancelBuyMoney(final double cancelBuyMoney) {
            this.cancelBuyMoney = cancelBuyMoney;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder cancelSellMoney(final double cancelSellMoney) {
            this.cancelSellMoney = cancelSellMoney;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder totalBuyCount(final long totalBuyCount) {
            this.totalBuyCount = totalBuyCount;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder totalSellCount(final long totalSellCount) {
            this.totalSellCount = totalSellCount;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder durationAfterBuy(final int durationAfterBuy) {
            this.durationAfterBuy = durationAfterBuy;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder durationAfterSell(final int durationAfterSell) {
            this.durationAfterSell = durationAfterSell;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder numBidOrders(final int numBidOrders) {
            this.numBidOrders = numBidOrders;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder numAskOrders(final int numAskOrders) {
            this.numAskOrders = numAskOrders;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponseBuilder preIopv(final double preIopv) {
            this.preIopv = preIopv;
            return this;
        }

        @SuppressWarnings("all")
        public MarketDataStockExDataResponse build() {
            return new MarketDataStockExDataResponse(totalBidQty, totalAskQty, maBidPrice, maAskPrice, maBondBidPrice, maBondAskPrice, yieldToMaturity, iopv, etfBuyCount, etfSellCount, etfBuyQty, etfBuyMoney, etfSellQty, etfSellMoney, totalWarrantExecQty, warrantLowerPrice, warrantUpperPrice, cancelBuyCount, cancelSellCount, cancelBuyQty, cancelSellQty, cancelBuyMoney, cancelSellMoney, totalBuyCount, totalSellCount, durationAfterBuy, durationAfterSell, numBidOrders, numAskOrders, preIopv);
        }

        @Override
        @SuppressWarnings("all")
        public String toString() {
            return "MarketDataStockExDataResponse.MarketDataStockExDataResponseBuilder(totalBidQty=" + this.totalBidQty + ", totalAskQty=" + this.totalAskQty + ", maBidPrice=" + this.maBidPrice + ", maAskPrice=" + this.maAskPrice + ", maBondBidPrice=" + this.maBondBidPrice + ", maBondAskPrice=" + this.maBondAskPrice + ", yieldToMaturity=" + this.yieldToMaturity + ", iopv=" + this.iopv + ", etfBuyCount=" + this.etfBuyCount + ", etfSellCount=" + this.etfSellCount + ", etfBuyQty=" + this.etfBuyQty + ", etfBuyMoney=" + this.etfBuyMoney + ", etfSellQty=" + this.etfSellQty + ", etfSellMoney=" + this.etfSellMoney + ", totalWarrantExecQty=" + this.totalWarrantExecQty + ", warrantLowerPrice=" + this.warrantLowerPrice + ", warrantUpperPrice=" + this.warrantUpperPrice + ", cancelBuyCount=" + this.cancelBuyCount + ", cancelSellCount=" + this.cancelSellCount + ", cancelBuyQty=" + this.cancelBuyQty + ", cancelSellQty=" + this.cancelSellQty + ", cancelBuyMoney=" + this.cancelBuyMoney + ", cancelSellMoney=" + this.cancelSellMoney + ", totalBuyCount=" + this.totalBuyCount + ", totalSellCount=" + this.totalSellCount + ", durationAfterBuy=" + this.durationAfterBuy + ", durationAfterSell=" + this.durationAfterSell + ", numBidOrders=" + this.numBidOrders + ", numAskOrders=" + this.numAskOrders + ", preIopv=" + this.preIopv + ")";
        }
    }

    @SuppressWarnings("all")
    public static MarketDataStockExDataResponseBuilder builder() {
        return new MarketDataStockExDataResponseBuilder();
    }

    /**
     * 委托买入总量(SH,SZ)
     */
    @SuppressWarnings("all")
    public long getTotalBidQty() {
        return this.totalBidQty;
    }

    /**
     * 委托卖出总量(SH,SZ)
     */
    @SuppressWarnings("all")
    public long getTotalAskQty() {
        return this.totalAskQty;
    }

    /**
     * 加权平均委买价格(SH,SZ)
     */
    @SuppressWarnings("all")
    public double getMaBidPrice() {
        return this.maBidPrice;
    }

    /**
     * 加权平均委卖价格(SH,SZ)
     */
    @SuppressWarnings("all")
    public double getMaAskPrice() {
        return this.maAskPrice;
    }

    /**
     * 债券加权平均委买价格(SH)
     */
    @SuppressWarnings("all")
    public double getMaBondBidPrice() {
        return this.maBondBidPrice;
    }

    /**
     * 债券加权平均委卖价格(SH)
     */
    @SuppressWarnings("all")
    public double getMaBondAskPrice() {
        return this.maBondAskPrice;
    }

    /**
     * 债券到期收益率(SH)
     */
    @SuppressWarnings("all")
    public double getYieldToMaturity() {
        return this.yieldToMaturity;
    }

    /**
     * 基金实时参考净值(SH,SZ)
     */
    @SuppressWarnings("all")
    public double getIopv() {
        return this.iopv;
    }

    /**
     * ETF申购笔数(SH)
     */
    @SuppressWarnings("all")
    public int getEtfBuyCount() {
        return this.etfBuyCount;
    }

    /**
     * ETF赎回笔数(SH)
     */
    @SuppressWarnings("all")
    public int getEtfSellCount() {
        return this.etfSellCount;
    }

    /**
     * ETF申购数量(SH)
     */
    @SuppressWarnings("all")
    public double getEtfBuyQty() {
        return this.etfBuyQty;
    }

    /**
     * ETF申购金额(SH)
     */
    @SuppressWarnings("all")
    public double getEtfBuyMoney() {
        return this.etfBuyMoney;
    }

    /**
     * ETF赎回数量(SH)
     */
    @SuppressWarnings("all")
    public double getEtfSellQty() {
        return this.etfSellQty;
    }

    /**
     * ETF赎回金额(SH)
     */
    @SuppressWarnings("all")
    public double getEtfSellMoney() {
        return this.etfSellMoney;
    }

    /**
     * 权证执行的总数量(SH)
     */
    @SuppressWarnings("all")
    public double getTotalWarrantExecQty() {
        return this.totalWarrantExecQty;
    }

    /**
     * 权证跌停价格（元）(SH)
     */
    @SuppressWarnings("all")
    public double getWarrantLowerPrice() {
        return this.warrantLowerPrice;
    }

    /**
     * 权证涨停价格（元）(SH)
     */
    @SuppressWarnings("all")
    public double getWarrantUpperPrice() {
        return this.warrantUpperPrice;
    }

    /**
     * 买入撤单笔数(SH)
     */
    @SuppressWarnings("all")
    public int getCancelBuyCount() {
        return this.cancelBuyCount;
    }

    /**
     * 卖出撤单笔数(SH)
     */
    @SuppressWarnings("all")
    public int getCancelSellCount() {
        return this.cancelSellCount;
    }

    /**
     * 买入撤单数量(SH)
     */
    @SuppressWarnings("all")
    public double getCancelBuyQty() {
        return this.cancelBuyQty;
    }

    /**
     * 卖出撤单数量(SH)
     */
    @SuppressWarnings("all")
    public double getCancelSellQty() {
        return this.cancelSellQty;
    }

    /**
     * 买入撤单金额(SH)
     */
    @SuppressWarnings("all")
    public double getCancelBuyMoney() {
        return this.cancelBuyMoney;
    }

    /**
     * 卖出撤单金额(SH)
     */
    @SuppressWarnings("all")
    public double getCancelSellMoney() {
        return this.cancelSellMoney;
    }

    /**
     * 买入总笔数(SH)
     */
    @SuppressWarnings("all")
    public long getTotalBuyCount() {
        return this.totalBuyCount;
    }

    /**
     * 卖出总笔数(SH)
     */
    @SuppressWarnings("all")
    public long getTotalSellCount() {
        return this.totalSellCount;
    }

    /**
     * 买入委托成交最大等待时间(SH)
     */
    @SuppressWarnings("all")
    public int getDurationAfterBuy() {
        return this.durationAfterBuy;
    }

    /**
     * 卖出委托成交最大等待时间(SH)
     */
    @SuppressWarnings("all")
    public int getDurationAfterSell() {
        return this.durationAfterSell;
    }

    /**
     * 买方委托价位数(SH)
     */
    @SuppressWarnings("all")
    public int getNumBidOrders() {
        return this.numBidOrders;
    }

    /**
     * 卖方委托价位数(SH)
     */
    @SuppressWarnings("all")
    public int getNumAskOrders() {
        return this.numAskOrders;
    }

    /**
     * 基金T-1日净值(SZ)
     */
    @SuppressWarnings("all")
    public double getPreIopv() {
        return this.preIopv;
    }

    /**
     * 委托买入总量(SH,SZ)
     */
    @SuppressWarnings("all")
    public void setTotalBidQty(final long totalBidQty) {
        this.totalBidQty = totalBidQty;
    }

    /**
     * 委托卖出总量(SH,SZ)
     */
    @SuppressWarnings("all")
    public void setTotalAskQty(final long totalAskQty) {
        this.totalAskQty = totalAskQty;
    }

    /**
     * 加权平均委买价格(SH,SZ)
     */
    @SuppressWarnings("all")
    public void setMaBidPrice(final double maBidPrice) {
        this.maBidPrice = maBidPrice;
    }

    /**
     * 加权平均委卖价格(SH,SZ)
     */
    @SuppressWarnings("all")
    public void setMaAskPrice(final double maAskPrice) {
        this.maAskPrice = maAskPrice;
    }

    /**
     * 债券加权平均委买价格(SH)
     */
    @SuppressWarnings("all")
    public void setMaBondBidPrice(final double maBondBidPrice) {
        this.maBondBidPrice = maBondBidPrice;
    }

    /**
     * 债券加权平均委卖价格(SH)
     */
    @SuppressWarnings("all")
    public void setMaBondAskPrice(final double maBondAskPrice) {
        this.maBondAskPrice = maBondAskPrice;
    }

    /**
     * 债券到期收益率(SH)
     */
    @SuppressWarnings("all")
    public void setYieldToMaturity(final double yieldToMaturity) {
        this.yieldToMaturity = yieldToMaturity;
    }

    /**
     * 基金实时参考净值(SH,SZ)
     */
    @SuppressWarnings("all")
    public void setIopv(final double iopv) {
        this.iopv = iopv;
    }

    /**
     * ETF申购笔数(SH)
     */
    @SuppressWarnings("all")
    public void setEtfBuyCount(final int etfBuyCount) {
        this.etfBuyCount = etfBuyCount;
    }

    /**
     * ETF赎回笔数(SH)
     */
    @SuppressWarnings("all")
    public void setEtfSellCount(final int etfSellCount) {
        this.etfSellCount = etfSellCount;
    }

    /**
     * ETF申购数量(SH)
     */
    @SuppressWarnings("all")
    public void setEtfBuyQty(final double etfBuyQty) {
        this.etfBuyQty = etfBuyQty;
    }

    /**
     * ETF申购金额(SH)
     */
    @SuppressWarnings("all")
    public void setEtfBuyMoney(final double etfBuyMoney) {
        this.etfBuyMoney = etfBuyMoney;
    }

    /**
     * ETF赎回数量(SH)
     */
    @SuppressWarnings("all")
    public void setEtfSellQty(final double etfSellQty) {
        this.etfSellQty = etfSellQty;
    }

    /**
     * ETF赎回金额(SH)
     */
    @SuppressWarnings("all")
    public void setEtfSellMoney(final double etfSellMoney) {
        this.etfSellMoney = etfSellMoney;
    }

    /**
     * 权证执行的总数量(SH)
     */
    @SuppressWarnings("all")
    public void setTotalWarrantExecQty(final double totalWarrantExecQty) {
        this.totalWarrantExecQty = totalWarrantExecQty;
    }

    /**
     * 权证跌停价格（元）(SH)
     */
    @SuppressWarnings("all")
    public void setWarrantLowerPrice(final double warrantLowerPrice) {
        this.warrantLowerPrice = warrantLowerPrice;
    }

    /**
     * 权证涨停价格（元）(SH)
     */
    @SuppressWarnings("all")
    public void setWarrantUpperPrice(final double warrantUpperPrice) {
        this.warrantUpperPrice = warrantUpperPrice;
    }

    /**
     * 买入撤单笔数(SH)
     */
    @SuppressWarnings("all")
    public void setCancelBuyCount(final int cancelBuyCount) {
        this.cancelBuyCount = cancelBuyCount;
    }

    /**
     * 卖出撤单笔数(SH)
     */
    @SuppressWarnings("all")
    public void setCancelSellCount(final int cancelSellCount) {
        this.cancelSellCount = cancelSellCount;
    }

    /**
     * 买入撤单数量(SH)
     */
    @SuppressWarnings("all")
    public void setCancelBuyQty(final double cancelBuyQty) {
        this.cancelBuyQty = cancelBuyQty;
    }

    /**
     * 卖出撤单数量(SH)
     */
    @SuppressWarnings("all")
    public void setCancelSellQty(final double cancelSellQty) {
        this.cancelSellQty = cancelSellQty;
    }

    /**
     * 买入撤单金额(SH)
     */
    @SuppressWarnings("all")
    public void setCancelBuyMoney(final double cancelBuyMoney) {
        this.cancelBuyMoney = cancelBuyMoney;
    }

    /**
     * 卖出撤单金额(SH)
     */
    @SuppressWarnings("all")
    public void setCancelSellMoney(final double cancelSellMoney) {
        this.cancelSellMoney = cancelSellMoney;
    }

    /**
     * 买入总笔数(SH)
     */
    @SuppressWarnings("all")
    public void setTotalBuyCount(final long totalBuyCount) {
        this.totalBuyCount = totalBuyCount;
    }

    /**
     * 卖出总笔数(SH)
     */
    @SuppressWarnings("all")
    public void setTotalSellCount(final long totalSellCount) {
        this.totalSellCount = totalSellCount;
    }

    /**
     * 买入委托成交最大等待时间(SH)
     */
    @SuppressWarnings("all")
    public void setDurationAfterBuy(final int durationAfterBuy) {
        this.durationAfterBuy = durationAfterBuy;
    }

    /**
     * 卖出委托成交最大等待时间(SH)
     */
    @SuppressWarnings("all")
    public void setDurationAfterSell(final int durationAfterSell) {
        this.durationAfterSell = durationAfterSell;
    }

    /**
     * 买方委托价位数(SH)
     */
    @SuppressWarnings("all")
    public void setNumBidOrders(final int numBidOrders) {
        this.numBidOrders = numBidOrders;
    }

    /**
     * 卖方委托价位数(SH)
     */
    @SuppressWarnings("all")
    public void setNumAskOrders(final int numAskOrders) {
        this.numAskOrders = numAskOrders;
    }

    /**
     * 基金T-1日净值(SZ)
     */
    @SuppressWarnings("all")
    public void setPreIopv(final double preIopv) {
        this.preIopv = preIopv;
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof MarketDataStockExDataResponse)) return false;
        final MarketDataStockExDataResponse other = (MarketDataStockExDataResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (this.getTotalBidQty() != other.getTotalBidQty()) return false;
        if (this.getTotalAskQty() != other.getTotalAskQty()) return false;
        if (Double.compare(this.getMaBidPrice(), other.getMaBidPrice()) != 0) return false;
        if (Double.compare(this.getMaAskPrice(), other.getMaAskPrice()) != 0) return false;
        if (Double.compare(this.getMaBondBidPrice(), other.getMaBondBidPrice()) != 0) return false;
        if (Double.compare(this.getMaBondAskPrice(), other.getMaBondAskPrice()) != 0) return false;
        if (Double.compare(this.getYieldToMaturity(), other.getYieldToMaturity()) != 0) return false;
        if (Double.compare(this.getIopv(), other.getIopv()) != 0) return false;
        if (this.getEtfBuyCount() != other.getEtfBuyCount()) return false;
        if (this.getEtfSellCount() != other.getEtfSellCount()) return false;
        if (Double.compare(this.getEtfBuyQty(), other.getEtfBuyQty()) != 0) return false;
        if (Double.compare(this.getEtfBuyMoney(), other.getEtfBuyMoney()) != 0) return false;
        if (Double.compare(this.getEtfSellQty(), other.getEtfSellQty()) != 0) return false;
        if (Double.compare(this.getEtfSellMoney(), other.getEtfSellMoney()) != 0) return false;
        if (Double.compare(this.getTotalWarrantExecQty(), other.getTotalWarrantExecQty()) != 0) return false;
        if (Double.compare(this.getWarrantLowerPrice(), other.getWarrantLowerPrice()) != 0) return false;
        if (Double.compare(this.getWarrantUpperPrice(), other.getWarrantUpperPrice()) != 0) return false;
        if (this.getCancelBuyCount() != other.getCancelBuyCount()) return false;
        if (this.getCancelSellCount() != other.getCancelSellCount()) return false;
        if (Double.compare(this.getCancelBuyQty(), other.getCancelBuyQty()) != 0) return false;
        if (Double.compare(this.getCancelSellQty(), other.getCancelSellQty()) != 0) return false;
        if (Double.compare(this.getCancelBuyMoney(), other.getCancelBuyMoney()) != 0) return false;
        if (Double.compare(this.getCancelSellMoney(), other.getCancelSellMoney()) != 0) return false;
        if (this.getTotalBuyCount() != other.getTotalBuyCount()) return false;
        if (this.getTotalSellCount() != other.getTotalSellCount()) return false;
        if (this.getDurationAfterBuy() != other.getDurationAfterBuy()) return false;
        if (this.getDurationAfterSell() != other.getDurationAfterSell()) return false;
        if (this.getNumBidOrders() != other.getNumBidOrders()) return false;
        if (this.getNumAskOrders() != other.getNumAskOrders()) return false;
        if (Double.compare(this.getPreIopv(), other.getPreIopv()) != 0) return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof MarketDataStockExDataResponse;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final long $totalBidQty = this.getTotalBidQty();
        result = result * PRIME + (int) ($totalBidQty >>> 32 ^ $totalBidQty);
        final long $totalAskQty = this.getTotalAskQty();
        result = result * PRIME + (int) ($totalAskQty >>> 32 ^ $totalAskQty);
        final long $maBidPrice = Double.doubleToLongBits(this.getMaBidPrice());
        result = result * PRIME + (int) ($maBidPrice >>> 32 ^ $maBidPrice);
        final long $maAskPrice = Double.doubleToLongBits(this.getMaAskPrice());
        result = result * PRIME + (int) ($maAskPrice >>> 32 ^ $maAskPrice);
        final long $maBondBidPrice = Double.doubleToLongBits(this.getMaBondBidPrice());
        result = result * PRIME + (int) ($maBondBidPrice >>> 32 ^ $maBondBidPrice);
        final long $maBondAskPrice = Double.doubleToLongBits(this.getMaBondAskPrice());
        result = result * PRIME + (int) ($maBondAskPrice >>> 32 ^ $maBondAskPrice);
        final long $yieldToMaturity = Double.doubleToLongBits(this.getYieldToMaturity());
        result = result * PRIME + (int) ($yieldToMaturity >>> 32 ^ $yieldToMaturity);
        final long $iopv = Double.doubleToLongBits(this.getIopv());
        result = result * PRIME + (int) ($iopv >>> 32 ^ $iopv);
        result = result * PRIME + this.getEtfBuyCount();
        result = result * PRIME + this.getEtfSellCount();
        final long $etfBuyQty = Double.doubleToLongBits(this.getEtfBuyQty());
        result = result * PRIME + (int) ($etfBuyQty >>> 32 ^ $etfBuyQty);
        final long $etfBuyMoney = Double.doubleToLongBits(this.getEtfBuyMoney());
        result = result * PRIME + (int) ($etfBuyMoney >>> 32 ^ $etfBuyMoney);
        final long $etfSellQty = Double.doubleToLongBits(this.getEtfSellQty());
        result = result * PRIME + (int) ($etfSellQty >>> 32 ^ $etfSellQty);
        final long $etfSellMoney = Double.doubleToLongBits(this.getEtfSellMoney());
        result = result * PRIME + (int) ($etfSellMoney >>> 32 ^ $etfSellMoney);
        final long $totalWarrantExecQty = Double.doubleToLongBits(this.getTotalWarrantExecQty());
        result = result * PRIME + (int) ($totalWarrantExecQty >>> 32 ^ $totalWarrantExecQty);
        final long $warrantLowerPrice = Double.doubleToLongBits(this.getWarrantLowerPrice());
        result = result * PRIME + (int) ($warrantLowerPrice >>> 32 ^ $warrantLowerPrice);
        final long $warrantUpperPrice = Double.doubleToLongBits(this.getWarrantUpperPrice());
        result = result * PRIME + (int) ($warrantUpperPrice >>> 32 ^ $warrantUpperPrice);
        result = result * PRIME + this.getCancelBuyCount();
        result = result * PRIME + this.getCancelSellCount();
        final long $cancelBuyQty = Double.doubleToLongBits(this.getCancelBuyQty());
        result = result * PRIME + (int) ($cancelBuyQty >>> 32 ^ $cancelBuyQty);
        final long $cancelSellQty = Double.doubleToLongBits(this.getCancelSellQty());
        result = result * PRIME + (int) ($cancelSellQty >>> 32 ^ $cancelSellQty);
        final long $cancelBuyMoney = Double.doubleToLongBits(this.getCancelBuyMoney());
        result = result * PRIME + (int) ($cancelBuyMoney >>> 32 ^ $cancelBuyMoney);
        final long $cancelSellMoney = Double.doubleToLongBits(this.getCancelSellMoney());
        result = result * PRIME + (int) ($cancelSellMoney >>> 32 ^ $cancelSellMoney);
        final long $totalBuyCount = this.getTotalBuyCount();
        result = result * PRIME + (int) ($totalBuyCount >>> 32 ^ $totalBuyCount);
        final long $totalSellCount = this.getTotalSellCount();
        result = result * PRIME + (int) ($totalSellCount >>> 32 ^ $totalSellCount);
        result = result * PRIME + this.getDurationAfterBuy();
        result = result * PRIME + this.getDurationAfterSell();
        result = result * PRIME + this.getNumBidOrders();
        result = result * PRIME + this.getNumAskOrders();
        final long $preIopv = Double.doubleToLongBits(this.getPreIopv());
        result = result * PRIME + (int) ($preIopv >>> 32 ^ $preIopv);
        return result;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "MarketDataStockExDataResponse(totalBidQty=" + this.getTotalBidQty() + ", totalAskQty=" + this.getTotalAskQty() + ", maBidPrice=" + this.getMaBidPrice() + ", maAskPrice=" + this.getMaAskPrice() + ", maBondBidPrice=" + this.getMaBondBidPrice() + ", maBondAskPrice=" + this.getMaBondAskPrice() + ", yieldToMaturity=" + this.getYieldToMaturity() + ", iopv=" + this.getIopv() + ", etfBuyCount=" + this.getEtfBuyCount() + ", etfSellCount=" + this.getEtfSellCount() + ", etfBuyQty=" + this.getEtfBuyQty() + ", etfBuyMoney=" + this.getEtfBuyMoney() + ", etfSellQty=" + this.getEtfSellQty() + ", etfSellMoney=" + this.getEtfSellMoney() + ", totalWarrantExecQty=" + this.getTotalWarrantExecQty() + ", warrantLowerPrice=" + this.getWarrantLowerPrice() + ", warrantUpperPrice=" + this.getWarrantUpperPrice() + ", cancelBuyCount=" + this.getCancelBuyCount() + ", cancelSellCount=" + this.getCancelSellCount() + ", cancelBuyQty=" + this.getCancelBuyQty() + ", cancelSellQty=" + this.getCancelSellQty() + ", cancelBuyMoney=" + this.getCancelBuyMoney() + ", cancelSellMoney=" + this.getCancelSellMoney() + ", totalBuyCount=" + this.getTotalBuyCount() + ", totalSellCount=" + this.getTotalSellCount() + ", durationAfterBuy=" + this.getDurationAfterBuy() + ", durationAfterSell=" + this.getDurationAfterSell() + ", numBidOrders=" + this.getNumBidOrders() + ", numAskOrders=" + this.getNumAskOrders() + ", preIopv=" + this.getPreIopv() + ")";
    }

    @SuppressWarnings("all")
    public MarketDataStockExDataResponse() {
    }

    @SuppressWarnings("all")
    public MarketDataStockExDataResponse(final long totalBidQty, final long totalAskQty, final double maBidPrice, final double maAskPrice, final double maBondBidPrice, final double maBondAskPrice, final double yieldToMaturity, final double iopv, final int etfBuyCount, final int etfSellCount, final double etfBuyQty, final double etfBuyMoney, final double etfSellQty, final double etfSellMoney, final double totalWarrantExecQty, final double warrantLowerPrice, final double warrantUpperPrice, final int cancelBuyCount, final int cancelSellCount, final double cancelBuyQty, final double cancelSellQty, final double cancelBuyMoney, final double cancelSellMoney, final long totalBuyCount, final long totalSellCount, final int durationAfterBuy, final int durationAfterSell, final int numBidOrders, final int numAskOrders, final double preIopv) {
        this.totalBidQty = totalBidQty;
        this.totalAskQty = totalAskQty;
        this.maBidPrice = maBidPrice;
        this.maAskPrice = maAskPrice;
        this.maBondBidPrice = maBondBidPrice;
        this.maBondAskPrice = maBondAskPrice;
        this.yieldToMaturity = yieldToMaturity;
        this.iopv = iopv;
        this.etfBuyCount = etfBuyCount;
        this.etfSellCount = etfSellCount;
        this.etfBuyQty = etfBuyQty;
        this.etfBuyMoney = etfBuyMoney;
        this.etfSellQty = etfSellQty;
        this.etfSellMoney = etfSellMoney;
        this.totalWarrantExecQty = totalWarrantExecQty;
        this.warrantLowerPrice = warrantLowerPrice;
        this.warrantUpperPrice = warrantUpperPrice;
        this.cancelBuyCount = cancelBuyCount;
        this.cancelSellCount = cancelSellCount;
        this.cancelBuyQty = cancelBuyQty;
        this.cancelSellQty = cancelSellQty;
        this.cancelBuyMoney = cancelBuyMoney;
        this.cancelSellMoney = cancelSellMoney;
        this.totalBuyCount = totalBuyCount;
        this.totalSellCount = totalSellCount;
        this.durationAfterBuy = durationAfterBuy;
        this.durationAfterSell = durationAfterSell;
        this.numBidOrders = numBidOrders;
        this.numAskOrders = numAskOrders;
        this.preIopv = preIopv;
    }
}
