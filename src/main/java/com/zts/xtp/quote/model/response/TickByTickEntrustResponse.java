// Generated by delombok at Sun Sep 22 21:37:45 CST 2019
package com.zts.xtp.quote.model.response;

/**
 * 逐笔委托(仅适用深交所)
 *
 * @author roger on 2018/5/22
 */
public class TickByTickEntrustResponse {
    /**
     * 频道代码
     */
    private int channelNo;
    /**
     * 委托序号(在同一个channel_no内唯一，从1开始连续)
     */
    private long seq;
    /**
     * 委托价格
     */
    private double price;
    /**
     * 委托数量
     */
    private long qty;
    /**
     * '1':买; '2':卖; 'G':借入; 'F':出借
     */
    private char side;
    /**
     * 订单类别: '1': 市价; '2': 限价; '3': 本方最优
     */
    private char ordType;

    /**
     * 频道代码
     */
    @SuppressWarnings("all")
    public int getChannelNo() {
        return this.channelNo;
    }

    /**
     * 委托序号(在同一个channel_no内唯一，从1开始连续)
     */
    @SuppressWarnings("all")
    public long getSeq() {
        return this.seq;
    }

    /**
     * 委托价格
     */
    @SuppressWarnings("all")
    public double getPrice() {
        return this.price;
    }

    /**
     * 委托数量
     */
    @SuppressWarnings("all")
    public long getQty() {
        return this.qty;
    }

    /**
     * '1':买; '2':卖; 'G':借入; 'F':出借
     */
    @SuppressWarnings("all")
    public char getSide() {
        return this.side;
    }

    /**
     * 订单类别: '1': 市价; '2': 限价; '3': 本方最优
     */
    @SuppressWarnings("all")
    public char getOrdType() {
        return this.ordType;
    }

    /**
     * 频道代码
     */
    @SuppressWarnings("all")
    public void setChannelNo(final int channelNo) {
        this.channelNo = channelNo;
    }

    /**
     * 委托序号(在同一个channel_no内唯一，从1开始连续)
     */
    @SuppressWarnings("all")
    public void setSeq(final long seq) {
        this.seq = seq;
    }

    /**
     * 委托价格
     */
    @SuppressWarnings("all")
    public void setPrice(final double price) {
        this.price = price;
    }

    /**
     * 委托数量
     */
    @SuppressWarnings("all")
    public void setQty(final long qty) {
        this.qty = qty;
    }

    /**
     * '1':买; '2':卖; 'G':借入; 'F':出借
     */
    @SuppressWarnings("all")
    public void setSide(final char side) {
        this.side = side;
    }

    /**
     * 订单类别: '1': 市价; '2': 限价; '3': 本方最优
     */
    @SuppressWarnings("all")
    public void setOrdType(final char ordType) {
        this.ordType = ordType;
    }

    @Override
    @SuppressWarnings("all")
    public String toString() {
        return "TickByTickEntrustResponse(channelNo=" + this.getChannelNo() + ", seq=" + this.getSeq() + ", price=" + this.getPrice() + ", qty=" + this.getQty() + ", side=" + this.getSide() + ", ordType=" + this.getOrdType() + ")";
    }

    @SuppressWarnings("all")
    public TickByTickEntrustResponse() {
    }

    @Override
    @SuppressWarnings("all")
    public boolean equals(final Object o) {
        if (o == this) return true;
        if (!(o instanceof TickByTickEntrustResponse)) return false;
        final TickByTickEntrustResponse other = (TickByTickEntrustResponse) o;
        if (!other.canEqual((Object) this)) return false;
        if (this.getChannelNo() != other.getChannelNo()) return false;
        if (this.getSeq() != other.getSeq()) return false;
        return true;
    }

    @SuppressWarnings("all")
    protected boolean canEqual(final Object other) {
        return other instanceof TickByTickEntrustResponse;
    }

    @Override
    @SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.getChannelNo();
        final long $seq = this.getSeq();
        result = result * PRIME + (int) ($seq >>> 32 ^ $seq);
        return result;
    }
}
